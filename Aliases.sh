prototype Aliases
{
  void @center_line();
  int  @column();
  str  @current_character();
  int  @current_column();
  int  @current_column_number();
  int  @current_line();
  int  @current_line_contains(str parameter);
  int  @current_line_contains_regex(str parameter);
  int  @current_line_number();
  int  @current_row();
  int  @current_row_number();
  int  @current_window();
  int  @current_window_number();
  str  @define_what_a_word_is();
  void @delete_block();
  void @delete_character();
  void @delete_current_character();
  void @delete_line();
  void @clear_markers();
  void @delete();
  void @delete_next_blank_line();
  void @delete_previous_character();
  void @delete_previous_line();
  str  @filename();
  str  @full_filename();
  str  @filename_extension();
  str  @first_character(str parameter);
  str  @first_character_in_line();
  str  @first_2_characters(str parameter);
  str  @first_3_characters(str parameter);
  str  @first_4_characters(str parameter);
  // (!rfsp)
  str  @first_5_characters(str parameter);
  str  @fourth_to_last_character(str parameter);
  str  @get_character_at_position(str string_to_analyze, int position);
  void @go_to_column(int column_Number);
  void @header();
  void @header_bloff();
  int  @is_alphanumeric_character(str prms_character);
  int  @is_selected();
  str  @last_character(str parameter);
  str  @left(str string, int right_boundary);
  str  @next_character();
  str  @next_3_characters();
  void @next_window();
  str  @previous_character();
  str  @previous_six_characters(str parameter, int current_position_on_line);
  str  @right(str string, int number_of_characters);
  void @say(str Message);
  void @select_all();
  int  @text_is_selected();
  str  @trim_after_character(str string, cutoff_character);
  str  @trim_after_phrase(str whole_string, str phrase);
  str  @trim_after_first_sentence(str string);
  str  @trim_before_character(str string, cutoff_character);
  str  @trim_first_character(str parameter);
  str  @trim_before_character(str whole_string, str phrase);
  str  @trim_before_phrase(str whole_string, str phrase);
  str  @trim_colons(str string);
  str  @trim_last_character(str parameter);
  str  @trim_leading_colons_et_al(str string);
  str  @trim_leading_spaces(str string);
  str  @trim_left(str string, int number_of_Characters_to_Trim);
  str  @trim_period(str string);
  str  @trim_string_after_open_paren(str string);
  str  @trim_trailing_spaces(str string);
}